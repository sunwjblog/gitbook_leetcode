package com.sunwj.leetcode.medium;

//ÁªôÂá∫‰∏§‰∏™ ÈùûÁ©∫ ÁöÑÈìæË°®Áî®Êù•Ë°®Á§∫‰∏§‰∏™ÈùûË¥üÁöÑÊï¥Êï∞„ÄÇÂÖ∂‰∏≠ÔºåÂÆÉ‰ª¨ÂêÑËá™ÁöÑ‰ΩçÊï∞ÊòØÊåâÁÖß ÈÄÜÂ∫è ÁöÑÊñπÂºèÂ≠òÂÇ®ÁöÑÔºåÂπ∂‰∏îÂÆÉ‰ª¨ÁöÑÊØè‰∏™ËäÇÁÇπÂè™ËÉΩÂ≠òÂÇ® ‰∏Ä‰Ωç Êï∞Â≠ó„ÄÇ
//
// Â¶ÇÊûúÔºåÊàë‰ª¨Â∞ÜËøô‰∏§‰∏™Êï∞Áõ∏Âä†Ëµ∑Êù•ÔºåÂàô‰ºöËøîÂõû‰∏Ä‰∏™Êñ∞ÁöÑÈìæË°®Êù•Ë°®Á§∫ÂÆÉ‰ª¨ÁöÑÂíå„ÄÇ
//
// ÊÇ®ÂèØ‰ª•ÂÅáËÆæÈô§‰∫ÜÊï∞Â≠ó 0 ‰πãÂ§ñÔºåËøô‰∏§‰∏™Êï∞ÈÉΩ‰∏ç‰ºö‰ª• 0 ÂºÄÂ§¥„ÄÇ
//
// Á§∫‰æãÔºö
//
// ËæìÂÖ•Ôºö(2 -> 4 -> 3) + (5 -> 6 -> 4)
//ËæìÂá∫Ôºö7 -> 0 -> 8
//ÂéüÂõ†Ôºö342 + 465 = 807
//
// Related Topics ÈìæË°® Êï∞Â≠¶
// üëç 4719 üëé 0



//JavaÔºö‰∏§Êï∞Áõ∏Âä†
public class P2AddTwoNumbers{
    public static void main(String[] args) {
        Solution solution = new P2AddTwoNumbers().new Solution();
        // TO TEST
        ListNode l1 = new P2AddTwoNumbers().new ListNode(5);
        l1.next = new P2AddTwoNumbers().new ListNode(4);
        l1.next.next = new P2AddTwoNumbers().new ListNode(3);

        ListNode l2 = new P2AddTwoNumbers().new ListNode(5);
        l2.next = new P2AddTwoNumbers().new ListNode(6);
        l2.next.next = new P2AddTwoNumbers().new ListNode(4);

        System.out.println(solution.addTwoNumbers(l1,l2));


    }
    //leetcode submit region begin(Prohibit modification and deletion)

      public class ListNode {
          int val;
          ListNode next;
          ListNode(int x) { val = x; }
      }
    class Solution {
        public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
            ListNode res = new ListNode(0);
            ListNode d = res;
            ListNode p = l1;
            ListNode q = l2;
            int sum = 0;
            while (p!=null && p!=null){
                sum /= 10;
                if (p != null) {
                    sum += p.val;
                    p = p.next;
                }
                if (q != null) {
                    sum += q.val;
                    q = q.next;
                }
                d.next = new ListNode(sum % 10);
                d = d.next;
            }
            if (sum / 10 == 1) {
                d.next = new ListNode(1);
            }
            return res.next;
        }
    }
//leetcode submit region end(Prohibit modification and deletion)

}
